General-purpose bilevel Fischetti algo

BILEVEL-ORIENTED BRANCHING STRATEGY W/ BRANCHING PRIORITIES [1]
-> new integer solution is found (x*,y*)
    1.is the solution bilevel feasible.
        -> if so, solve the follower MILP for y = y*
            - and obtain alternative point (x^,y*) with dy^ = valueFunc
        -> if dy* > valueFunc, sol is not bilevel feasible
            - cut using suitable IC.
    2. new point (x^,y*) is passed to a hoc-hoc feasibility check procedure that
        verifies its HPR feasibility wrt (2) and cost
        -> possibly updates incumbent


CALLBACK CUTS
Separate procedures implemented for FUB cuts and ICs.

separation of FUB cuts invoked only at the first callback call
at a given node, since it does not depend on (x*,y*).
 - only depends on the variable bounds at the given node.

Seperation of ICs is instead active at each callback 
call.
 - has a max number of consecutive calls
 - justified byh quick depreciation of IC benefit and 
    time consuming nature.

